/*
 * Copyright Â© 2017 Cask Data, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package co.cask.cdap.logging.appender;

import ch.qos.logback.classic.spi.ILoggingEvent;
import co.cask.cdap.logging.filter.CondensedLogFilter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.HashMap;
import java.util.Map;

/**
 * Checks for Classloader from the caller data of the log and adds user tags
 */
class LogUserTags   {
  private static final Logger LOG = LoggerFactory.getLogger(LogUserTags.class);
  private static final Map<String, Boolean> programClassCache = new HashMap<>();

  /**
   * Check if the Log was generated by a class loaded by ProgramClassLoader and add userTag
   */
  static void addUserLogTag(ILoggingEvent eventObject) {
    String className = eventObject.getCallerData()[0].getClassName();
    // Check if cache has the class
    if (programClassCache.get(className) != null) {
      if (programClassCache.get(className)) {
        eventObject.getMDCPropertyMap().put(CondensedLogFilter.USER_LOG_TAG, CondensedLogFilter.TRUE_VALUE);
      }
      return;
    }
    try {
      ClassLoader classLoader = Thread.currentThread().getContextClassLoader().loadClass(className).getClassLoader();
      if (classLoader != null && classLoader.toString().contains("ProgramClassLoader")) {
        eventObject.getMDCPropertyMap().put(CondensedLogFilter.USER_LOG_TAG, CondensedLogFilter.TRUE_VALUE);
        programClassCache.put(className, true);
      } else {
        programClassCache.put(className, false);
      }
    } catch (ClassNotFoundException e) {
      // should not happen
      LOG.error("Failed to add Usertag for class {}", className, e);
    }
  }
}
