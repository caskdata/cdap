/*
 * Copyright Â© 2018 Cask Data, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package co.cask.cdap.api.lineage;

import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

/**
 * Represents a single operation happening on the set of {@link Input}s to create set of {@link Output}s.
 */
public class Operation {
  private final String name;
  private final String description;
  private final Set<Input> inputs;
  private final Set<Output> outputs;

  private Operation(String name, String description, Set<Input> inputs, Set<Output> outputs) {
    this.name = name;
    this.description = description;
    this.inputs = Collections.unmodifiableSet(new HashSet<>(inputs));
    this.outputs = Collections.unmodifiableSet(new HashSet<>(outputs));
  }

  /**
   * @return the name of the operation
   */
  public String getName() {
    return name;
  }

  /**
   * @return the description associated with the operation
   */
  public String getDescription() {
    return description;
  }

  /**
   * @return {@link Set} of inputs to the operation
   */
  public Set<Input> getInputs() {
    return inputs;
  }

  /**
   * @return {@link Set} of outputs generated by operation
   */
  public Set<Output> getOutputs() {
    return outputs;
  }

  /**
   * Builder for creating Operation
   */
  public static class Builder {
    private final String name;
    private String description;
    private final Set<Input> inputs;
    private final Set<Output> outputs;

    public Builder(String name) {
      this.name = name;
      this.description = "";
      this.inputs = new HashSet<>();
      this.outputs = new HashSet<>();
    }

    public Builder setDescription(String description) {
      this.description = description;
      return this;
    }

    public Builder addInput(Input input) {
      this.inputs.add(input);
      return this;
    }

    public Builder addInputs(Collection<? extends Input> inputs) {
      this.inputs.addAll(inputs);
      return this;
    }

    public Builder addOutput(Output output) {
      this.outputs.add(output);
      return this;
    }

    public Builder addOutputs(Collection<? extends Output> outputs) {
      this.outputs.addAll(outputs);
      return this;
    }

    public Operation build() {
      return new Operation(name, description, inputs, outputs);
    }
  }
}

